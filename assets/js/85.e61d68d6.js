(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{217:function(t,i,e){"use strict";e.r(i);var a=e(0),r=Object(a.a)({},(function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"微信生态内的账户体系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#微信生态内的账户体系"}},[t._v("#")]),t._v(" 微信生态内的账户体系")]),t._v(" "),e("blockquote",[e("p",[t._v("本文可以理解为参考文章的学习笔记。")]),t._v(" "),e("p",[t._v("原文："),e("a",{attrs:{href:"https://m.huxiu.com/article/308172.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《搞定微信生态内的账户体系，看这篇文章就够了》"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("用户体系是每个互联网公司都需要考虑的一个点。最好是把账户体系做成服务。这样公司如果发展了，做了多个 App，也能实现帐号的打通。")]),t._v(" "),e("p",[t._v("目前我司的账户体系就是一个非常混乱的状态，有 4 个业务线，每个业务线都有自己的账户体系。然后各个业务线之间还有业务关联。")]),t._v(" "),e("p",[t._v("目前后端是把应用 A 的手机号去应用 B 中，默认生成一个新用户。")]),t._v(" "),e("h2",{attrs:{id:"一、基础概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、基础概念"}},[t._v("#")]),t._v(" 一、基础概念")]),t._v(" "),e("h3",{attrs:{id:"_1-1、授权类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1、授权类型"}},[t._v("#")]),t._v(" 1.1、授权类型")]),t._v(" "),e("p",[t._v("用户授权分为两种， "),e("strong",[t._v("静默授权，弹窗授权")])]),t._v(" "),e("ol",[e("li",[e("p",[t._v("静默授权")]),t._v(" "),e("ol",[e("li",[t._v("只能获取到用户的 openid")]),t._v(" "),e("li",[t._v("不需要弹窗，用户无感知")])])]),t._v(" "),e("li",[e("p",[t._v("弹窗授权")]),t._v(" "),e("ol",[e("li",[t._v("可以获取用户的头像，昵称，unionid")]),t._v(" "),e("li",[t._v("会弹出，要求授权")])])])]),t._v(" "),e("h3",{attrs:{id:"_1-2、openid-和-unionid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2、openid-和-unionid"}},[t._v("#")]),t._v(" 1.2、openid 和 unionid")]),t._v(" "),e("p",[e("strong",[t._v("openid 的唯一性 = 用户微信号 + 应用的 appid")]),t._v("（不同的公众号，小程序，appid 都是不同的）")]),t._v(" "),e("p",[e("strong",[t._v("unionid 的唯一性 = 用户微信号 + 开发者主体")]),t._v("（一般是公司）")]),t._v(" "),e("p",[t._v("同一个微信用户在 不同的 订阅号，服务号都有不一样的 openid")]),t._v(" "),e("p",[t._v("同一个微信用户在 同一个主体下的 订阅号和服务号，unionid 是唯一的。")]),t._v(" "),e("blockquote",[e("p",[t._v("比如，公司 A 主体下有一个订阅号，一个服务号，用户 B , 在订阅号 有一个 openid ，在服务号有一个 openid，这两个不一样")]),t._v(" "),e("p",[t._v("但是，微信提供了 openid 换 unionid 的一个功能，利用用户在订阅号的 openid 和 服务号的 openid 可以换到同一个 unionid。")])]),t._v(" "),e("h3",{attrs:{id:"_1-3、帐号体系有什么用？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-3、帐号体系有什么用？"}},[t._v("#")]),t._v(" 1.3、帐号体系有什么用？")]),t._v(" "),e("p",[t._v("对用户做"),e("strong",[t._v("身份的识别")]),t._v("和"),e("strong",[t._v("权限的控制")]),t._v("，是所有公司都需要用到的。")]),t._v(" "),e("p",[t._v("微信提供了以下几个功能接口")]),t._v(" "),e("ol",[e("li",[e("a",{attrs:{href:"https://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1421140842",target:"_blank",rel:"noopener noreferrer"}},[t._v("微信授权弹窗"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1421140840",target:"_blank",rel:"noopener noreferrer"}},[t._v("获取用户列表（针对已经关注公众号的用户）"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://developers.weixin.qq.com/miniprogram/dev/api/open-api/user-info/wx.getUserInfo.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("小程序获取用户信息接口"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://open.weixin.qq.com/cgi-bin/showdocument?action=dir_list&t=resource/res_list&verify=1&id=open1419317851&token=&lang=zh_CN",target:"_blank",rel:"noopener noreferrer"}},[t._v("移动应用微信登录接口"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("除了第二个接口，其他接口都需要用户授权。需要授权，因此就有可能用户拒绝了授权。业务上需要设计用户拒绝授权的处理。")]),t._v(" "),e("blockquote",[e("p",[t._v("微信文档写着，开发者需要妥善处理拒绝授权，但是并没有说应该这么妥善处理。")]),t._v(" "),e("p",[t._v("由于拒绝授权并没有回调事件，因此这个处理起来就比较麻烦")]),t._v(" "),e("p",[t._v("授权后，往 cookie 写入一个标识，如果没有标识，则认为用户拒绝了授权。")])]),t._v(" "),e("h3",{attrs:{id:"_1-4、appid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-4、appid"}},[t._v("#")]),t._v(" 1.4、appid")]),t._v(" "),e("p",[t._v("在微信体系中，每个微信公众号，小程序，App 都是不同的应用，并且每个应用都会有一个单独的 appid。")]),t._v(" "),e("h2",{attrs:{id:"二、单-appid-场景的微信账户体系建设"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、单-appid-场景的微信账户体系建设"}},[t._v("#")]),t._v(" 二、单 appid 场景的微信账户体系建设")]),t._v(" "),e("p",[t._v("业务系统中，生成一个标识用户的 userid，在微信中，引导用户弹窗授权拿到 unionid , 把这两个关联起来。")]),t._v(" "),e("h3",{attrs:{id:"_2-1、实现步骤"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1、实现步骤"}},[t._v("#")]),t._v(" 2.1、实现步骤")]),t._v(" "),e("ol",[e("li",[t._v("将 unionid 和 userid 绑定实现限权")]),t._v(" "),e("li",[t._v("利用 openid 进行快速身份识别 （主要用来处理用户换手机，或者清理掉了 cookie 内的登录信息）")]),t._v(" "),e("li",[t._v("交互层面需要处理用户拒绝授权")])]),t._v(" "),e("h4",{attrs:{id:"利用-openid-进行快速身份识别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#利用-openid-进行快速身份识别"}},[t._v("#")]),t._v(" 利用 openid 进行快速身份识别")]),t._v(" "),e("p",[t._v("在微信内网页可以直接识别用户的 openid（静默授权），所以把 openid 和 onionid 关联在一起，当用户授权过一次，后面就不用一直授权了。")]),t._v(" "),e("blockquote",[e("p",[t._v("用户取消关注公众号，在关注，openid 和 onionid 不会变。")])]),t._v(" "),e("h4",{attrs:{id:"处理用户拒绝授权"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#处理用户拒绝授权"}},[t._v("#")]),t._v(" 处理用户拒绝授权")]),t._v(" "),e("p",[t._v("比较常用的做法是设定一个拦截机制。 可以把强制要求授权弹窗的界面和强制要求登录的流程坐在一起。因为这两个性质比较相近。")]),t._v(" "),e("p",[t._v("大部分 App 端中的微信登录")]),t._v(" "),e("ol",[e("li",[t._v("点击微信登录")]),t._v(" "),e("li",[t._v("跳转到微信客户端，授权登录\n"),e("ol",[e("li",[t._v("拒绝授权，等同未登录")]),t._v(" "),e("li",[t._v("同意授权，返回客户端\n"),e("ol",[e("li",[t._v("新用户，要求注册该 App 的账户")]),t._v(" "),e("li",[t._v("老用户，直接登录成功")])])])])]),t._v(" "),e("li",[t._v("注册完，把微信的 unionid 和 userid 关联在一起")])]),t._v(" "),e("h4",{attrs:{id:"实践牢记事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实践牢记事件"}},[t._v("#")]),t._v(" 实践牢记事件")]),t._v(" "),e("p",[t._v("在数据存储方面，其实可以选择先存储 openid-unionid 的关联信息，再根据用户后续登录的情况，存储 unionid-userid 的关联信息，具体的逻辑顺序会在下一小节的流程图之中描述中展现。")]),t._v(" "),e("h4",{attrs:{id:"为什么不-openid-直接和-userid-关联来标识用户？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么不-openid-直接和-userid-关联来标识用户？"}},[t._v("#")]),t._v(" 为什么不 openid 直接和 userid 关联来标识用户？")]),t._v(" "),e("blockquote",[e("p",[t._v("保留扩展性，否则后期填坑火葬场。")])]),t._v(" "),e("p",[t._v("当然有同学会问，为什么不可以通过“snsapi_base 为 scope 发起的网页授权”（静默授权）直接获取 openid，然后和 userid 关联，为什么要因为获取不到 unionid 就做拦截呢？原因很简单，因为公司会发展，迟早会做小程序，做更多地业务，到时候回过头来再填这个坑，得不偿失。")]),t._v(" "),e("h2",{attrs:{id:"三、多-appid-场景的微信账户体系建设"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、多-appid-场景的微信账户体系建设"}},[t._v("#")]),t._v(" 三、多 appid 场景的微信账户体系建设")]),t._v(" "),e("p",[t._v("核心还是 ： unionid 关联 userid。")]),t._v(" "),e("h3",{attrs:{id:"_3-1、多-appid-应用如何关联"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1、多-appid-应用如何关联"}},[t._v("#")]),t._v(" 3.1、多 appid 应用如何关联")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://img.huxiucdn.com/article/content/201907/11/141059085312.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85",alt:"img"}})]),t._v(" "),e("h3",{attrs:{id:"_3-2、多个-appid-场景的流程图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2、多个-appid-场景的流程图"}},[t._v("#")]),t._v(" 3.2、多个 appid 场景的流程图")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://img.huxiucdn.com/article/content/201907/11/141059662804.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85",alt:"img"}})]),t._v(" "),e("h2",{attrs:{id:"四、其他"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四、其他"}},[t._v("#")]),t._v(" 四、其他")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://img.huxiucdn.com/article/content/201907/11/141059449382.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85",alt:"img"}})]),t._v(" "),e("p",[t._v("我觉得用户体系这个东西发展了这么多年，看上去很简单，但是其实里面深究起来学问也不少，但是总的来说在实际工作的时候，还是要牢牢把握住底层的核心思想，"),e("strong",[t._v("好的用户体系主要就是做两个事情，身份识别和限权")]),t._v("。所有的工作都应该围绕身份之别和限权这两个底层需要去做的，其实我们所做的一切，万变不离其宗，就是如何让用户把身份识别的成本降到最低，如何让系统限权做的最准确。")]),t._v(" "),e("p",[t._v("不妨回想一下，以前的用户体系还会区分“注册”和“登录”，现在基本上就是手机短信验证码登录，没注册默认注册，这个变化其实就是上面所提到的核心思想的一个实践方案，而且经过业界各个大厂的实践，基本上可以认为是一种最佳实践方案了。")]),t._v(" "),e("h2",{attrs:{id:"终、参考文章"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#终、参考文章"}},[t._v("#")]),t._v(" 终、参考文章")]),t._v(" "),e("ol",[e("li",[e("a",{attrs:{href:"https://m.huxiu.com/article/308172.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《搞定微信生态内的账户体系，看这篇文章就够了》"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);i.default=r.exports}}]);
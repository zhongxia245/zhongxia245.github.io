(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{155:function(t,e,a){"use strict";a.r(e);var r=a(0),_=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"手写代码系列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手写代码系列"}},[t._v("#")]),t._v(" 手写代码系列")]),t._v(" "),a("p",[t._v("在面试过程中，手写代码的环节是必不可少的，这里记录一下手写过的代码。")]),t._v(" "),a("ol",[a("li",[t._v("手写 React-Router 组件")])]),t._v(" "),a("h2",{attrs:{id:"一、手写-react-router-组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、手写-react-router-组件"}},[t._v("#")]),t._v(" 一、手写 React-Router 组件")]),t._v(" "),a("p",[t._v("这里做一个简单的介绍，具体看这里 "),a("RouterLink",{attrs:{to:"/interview/code/router.html"}},[t._v("《【手写代码】React-Router》")])],1),t._v(" "),a("p",[t._v("分析下"),a("code",[t._v("react-router")]),t._v(" 组件，有两种模式， "),a("code",[t._v("hash")]),t._v(" 和 "),a("code",[t._v("browser")]),t._v(" 模式。")]),t._v(" "),a("h3",{attrs:{id:"_1、hash-模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、hash-模式"}},[t._v("#")]),t._v(" 1、hash 模式")]),t._v(" "),a("p",[t._v("利用 "),a("code",[t._v("window.location.href = '#/url'")]),t._v(" 进行跳转，只变了 hash 值，因此不会刷新页面。"),a("code",[t._v("hash")]),t._v(" 变化可以通过 "),a("code",[t._v("onhashchange")]),t._v(" 来监听。利用 "),a("code",[t._v("onhashchange")]),t._v(" 监听到的变化，渲染不一样的组件，来实现 router 组件。")]),t._v(" "),a("blockquote",[a("p",[t._v("可以利用 react  的 state 变化，触发重新渲染，用不用 "),a("code",[t._v("onhashchnage")]),t._v(" 事件都可以实现。")])]),t._v(" "),a("h3",{attrs:{id:"_2、browser-模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、browser-模式"}},[t._v("#")]),t._v(" 2、browser 模式")]),t._v(" "),a("p",[t._v("在 html5中, history 新增了两个方法，"),a("code",[t._v("pushState")]),t._v(" 和 "),a("code",[t._v("replaceState")]),t._v(" , 通过这两个方法可以在不刷新页面的情况下修改页面的 url 地址。")]),t._v(" "),a("p",[a("code",[t._v("pushState")]),t._v(" 和 "),a("code",[t._v("replaceState")]),t._v(" 会触发 "),a("code",[t._v("onpopstate")]),t._v("事件，利用该事件渲染不一样的组件。")]),t._v(" "),a("blockquote",[a("p",[t._v("也可以利用 react 的 state变化，触发重新渲染，不需要通过监听 onpopstate 来触发重新渲染。")])])])}),[],!1,null,null,null);e.default=_.exports}}]);